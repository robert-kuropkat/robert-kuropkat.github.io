name: Deploy Blazor Site to GitHub Pages
# Run workflow on every push to the master branch
on:
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages   : write
  id-token: write
  
concurrency:
  group   : "pages"
  cancel-in-progress: false

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      GH_TOKEN      : ${{ secrets.GITHUB_TOKEN }}
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v4
    # sets up .NET Core SDK 3.1
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        #cache         : true
        #cache-dependency-path: ./packages.lock.json

        # Install dotnet wasm buildtools workload
#    - name: Install .NET WASM Build Tools
#      run : dotnet workload install wasm-tools
    

    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run : dotnet publish ./blazor-site/blazor-site.csproj -c Release -o release --nologo


    # Disable GitHub default jekyll behavior
    - name: Add .nojekyll file
      run : touch release/wwwroot/.nojekyll
      #run : |
      #      mkdir -p blazor-site/bin/Release/wwwroot/
      #      touch blazor-site/bin/Release/wwwroot/.nojekyll
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4.6.8
      with:
        token : ${{ secrets.GITHUB_TOKEN }}
        branch: gh-blazor
        #folder: blazor-site/bin/Release/wwwroot
        folder: release/wwwroot
        